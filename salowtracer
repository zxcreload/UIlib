-- SETTINGS
local Keybind = Enum.KeyCode.C  -- Клавиша для выбора цели

-- SERVICES
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService") -- Для обновления трассира

-- VARIABLES
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()
local Target = nil  -- Хранит выбранную цель
local Character = LocalPlayer.Character
local TracerBeam = nil -- Переменная для трассирующей линии
local StartAttachment = nil -- Точка начала трассира
local EndAttachment = nil -- Точка конца трассира

-- Функция для создания трассира
local function CreateTracer()
    -- Создаем Part для хранения Attachments (невидимый)
    local StartPart = Instance.new("Part")
    StartPart.Anchored = true
    StartPart.CanCollide = false
    StartPart.Transparency = 1
    StartPart.Parent = workspace

    local EndPart = Instance.new("Part")
    EndPart.Anchored = true
    EndPart.CanCollide = false
    EndPart.Transparency = 1
    EndPart.Parent = workspace

    -- Создаем Attachments
    StartAttachment = Instance.new("Attachment")
    StartAttachment.Parent = StartPart
    EndAttachment = Instance.new("Attachment")
    EndAttachment.Parent = EndPart

    -- Создаем Beam
    TracerBeam = Instance.new("Beam")
    TracerBeam.Attachment0 = StartAttachment
    TracerBeam.Attachment1 = EndAttachment
    TracerBeam.Color = ColorSequence.new(Color3.fromRGB(255, 0, 0)) -- Красный цвет
    TracerBeam.Brightness = 1
    TracerBeam.Width0 = 0.2
    TracerBeam.Width1 = 0.2
    TracerBeam.Enabled = false -- По умолчанию выключен
    TracerBeam.Parent = workspace
end

-- Функция для обновления трассира
local function UpdateTracer()
    if TracerBeam and StartAttachment and EndAttachment and Target and Target.Character and Target.Character:FindFirstChild("HumanoidRootPart") then
        -- Обновляем позицию начальной точки (например, у головы игрока)
        if Character and Character:FindFirstChild("Head") then
            StartAttachment.Parent.Position = Character.Head.Position
        end
        -- Вычисляем предсказанную точку
        local Hit = Target.Character.HumanoidRootPart.CFrame.Position
        local PlayerVelocity = Target.Character.HumanoidRootPart.Velocity
        local PredictedPosition = Hit + PlayerVelocity * 0.141245121
        -- Обновляем позицию конечной точки (предсказанная точка)
        EndAttachment.Parent.Position = PredictedPosition
        TracerBeam.Enabled = true
    else
        -- Отключаем трассир, если цель потеряна
        if TracerBeam then
            TracerBeam.Enabled = false
        end
    end
end

-- Функция для поиска ближайшего игрока к курсору
local function GetClosestToMouse()
    local ClosestTarget, ClosestDistance = nil, math.huge
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local Position, OnScreen = Camera:WorldToScreenPoint(player.Character.HumanoidRootPart.Position)
            local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
            if Distance < ClosestDistance and OnScreen then
                ClosestDistance = Distance
                ClosestTarget = player
            end
        end
    end
    return ClosestTarget
end

-- Выбор цели по нажатию клавиши
UserInputService.InputBegan:Connect(function(Input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if Input.KeyCode == Keybind then
        if Target == nil then
            Target = GetClosestToMouse()
            if Target then
                warn("Locked on to: " .. Target.Name)
            else
                warn("No target found")
            end
        else
            warn("Unlocked from: " .. Target.Name)
            Target = nil
        end
    end
end)

-- Обработка появления нового персонажа
local function SetupCharacter(char)
    Character = char
    char.ChildAdded:Connect(function(tool)
        if tool:IsA("Tool") then
            tool.Activated:Connect(function()
                if Target and Target.Character and Target.Character:FindFirstChild("HumanoidRootPart") then
                    local Hit = Target.Character.HumanoidRootPart.CFrame.Position
                    local PlayerVelocity = Target.Character.HumanoidRootPart.Velocity
                    -- Отправка данных серверу с учетом скорости цели
                    ReplicatedStorage.MainEvent:FireServer("UpdateMousePos", Hit + PlayerVelocity * 0.141245121)
                end
            end)
        end
    end)
end

-- Инициализация трассира
CreateTracer()

-- Обновление трассира каждый кадр
RunService.RenderStepped:Connect(UpdateTracer)

-- Подключение к текущему и новым персонажам
if Character then
    SetupCharacter(Character)
end
LocalPlayer.CharacterAdded:Connect(SetupCharacter)
